{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/util/ULog.ts"],"names":["ULog","cfg_global","UTime","init","log","enableLog","console","debug","warn","error","info","getCurTimeFormat","dateFormat","Date","param","optionalParams","logRed","logBlue","logOrange","logGray","trace","assert","condition","count","label","countReset","dir","item","options","dirxml","group","groupCollapsed","groupEnd","table","tabularData","properties","time","timeEnd","timeLog","timeStamp","clear"],"mappings":";;;iDAOqBA,I;;;;;;;;;;;;;;;;;;AANdC,MAAAA,U;;AACAC,MAAAA,K;;;;;;;AAEP;AACA;AACA;yBACqBF,I,GAAN,MAAMA,IAAN,CAAW;AAEtB;AACkB,eAAJG,IAAI,GAAG;AACjBH,UAAAA,IAAI,CAACI,GAAL,CAAS,YAAT,EAAuB;AAAA;AAAA,wCAAWC,SAAlC;;AACA,cAAI,CAAC;AAAA;AAAA,wCAAWA,SAAhB,EAA2B;AACvBC,YAAAA,OAAO,CAACF,GAAR,GAAc,MAAM,CAAG,CAAvB;;AACAE,YAAAA,OAAO,CAACC,KAAR,GAAgB,MAAM,CAAG,CAAzB;;AACAD,YAAAA,OAAO,CAACE,IAAR,GAAe,MAAM,CAAG,CAAxB;;AACAF,YAAAA,OAAO,CAACG,KAAR,GAAgB,MAAM,CAAG,CAAzB;;AACAH,YAAAA,OAAO,CAACI,IAAR,GAAe,MAAM,CAAG,CAAxB;AACH;AACJ;AAED;;;AAC+B,eAAhBC,gBAAgB,GAAG;AAC9B,iBAAO,MAAM;AAAA;AAAA,8BAAMC,UAAN,CAAiB,IAAIC,IAAJ,EAAjB,EAA6B,YAA7B,CAAN,GAAmD,GAA1D;AACH;AAED;;;AACiB,eAAHT,GAAG,CAACU,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACrDT,UAAAA,OAAO,CAACF,GAAR,CAAY,OAAO,KAAKO,gBAAL,EAAnB,EAA4C,eAA5C,EAA6DG,KAA7D,EAAoE,GAAGC,cAAvE;AACH;AAED;;;AACoB,eAANC,MAAM,CAACF,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACxDT,UAAAA,OAAO,CAACF,GAAR,CAAY,OAAO,KAAKO,gBAAL,EAAnB,EAA4C,eAA5C,EAA6DG,KAA7D,EAAoE,GAAGC,cAAvE;AACH;AAED;;;AACqB,eAAPE,OAAO,CAACH,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACzDT,UAAAA,OAAO,CAACF,GAAR,CAAY,OAAO,KAAKO,gBAAL,EAAnB,EAA4C,eAA5C,EAA6DG,KAA7D,EAAoE,GAAGC,cAAvE;AACH;AAED;;;AACuB,eAATG,SAAS,CAACJ,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AAC3DT,UAAAA,OAAO,CAACF,GAAR,CAAY,OAAO,KAAKO,gBAAL,EAAnB,EAA4C,eAA5C,EAA6DG,KAA7D,EAAoE,GAAGC,cAAvE;AACH;AAED;;;AACqB,eAAPI,OAAO,CAACL,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACzDT,UAAAA,OAAO,CAACF,GAAR,CAAY,OAAO,KAAKO,gBAAL,EAAnB,EAA4C,eAA5C,EAA6DG,KAA7D,EAAoE,GAAGC,cAAvE;AACH;;AAEkB,eAALR,KAAK,CAACO,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACvDT,UAAAA,OAAO,CAACC,KAAR,CAAcO,KAAd,EAAqB,GAAGC,cAAxB;AACH;;AAEiB,eAAJP,IAAI,CAACM,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACtDT,UAAAA,OAAO,CAACE,IAAR,CAAaM,KAAb,EAAoB,GAAGC,cAAvB;AACH;;AAEkB,eAALN,KAAK,CAACK,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACvDT,UAAAA,OAAO,CAACG,KAAR,CAAcK,KAAd,EAAqB,GAAGC,cAAxB;AACH;;AAEiB,eAAJL,IAAI,CAACI,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACtDT,UAAAA,OAAO,CAACI,IAAR,CAAaI,KAAb,EAAoB,GAAGC,cAAvB;AACH;;AAEkB,eAALK,KAAK,CAACN,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACvDT,UAAAA,OAAO,CAACc,KAAR,CAAcN,KAAd,EAAqB,GAAGC,cAAxB;AACH;;AAEmB,eAANM,MAAM,CAACC,SAAD,EAAsBR,KAAtB,EAAmC,GAAGC,cAAtC,EAA6D;AAC7ET,UAAAA,OAAO,CAACe,MAAR,CAAeC,SAAf,EAA0BR,KAA1B,EAAiC,GAAGC,cAApC;AACH;;AAEkB,eAALQ,KAAK,CAACC,KAAD,EAAiB;AAChClB,UAAAA,OAAO,CAACiB,KAAR,CAAcC,KAAd;AACH;;AAEuB,eAAVC,UAAU,CAACD,KAAD,EAAiB;AACrClB,UAAAA,OAAO,CAACmB,UAAR,CAAmBD,KAAnB;AACH;;AAEgB,eAAHE,GAAG,CAACC,IAAD,EAAaC,OAAb,EAA4B;AACzCtB,UAAAA,OAAO,CAACoB,GAAR,CAAYC,IAAZ,EAAkBC,OAAlB;AACH;;AAEmB,eAANC,MAAM,CAACf,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACxDT,UAAAA,OAAO,CAACuB,MAAR,CAAef,KAAf,EAAsB,GAAGC,cAAzB;AACH;;AAEkB,eAALe,KAAK,CAAChB,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AACvDT,UAAAA,OAAO,CAACwB,KAAR,CAAchB,KAAd,EAAqB,GAAGC,cAAxB;AACH;;AAE2B,eAAdgB,cAAc,CAACjB,KAAD,EAAc,GAAGC,cAAjB,EAAwC;AAChET,UAAAA,OAAO,CAACyB,cAAR,CAAuBjB,KAAvB,EAA8B,GAAGC,cAAjC;AACH;;AAEqB,eAARiB,QAAQ,GAAG;AACrB1B,UAAAA,OAAO,CAAC0B,QAAR;AACH;;AAEkB,eAALC,KAAK,CAACC,WAAD,EAAoBC,UAApB,EAA2C;AAC1D7B,UAAAA,OAAO,CAAC2B,KAAR,CAAcC,WAAd,EAA2BC,UAA3B;AACH;;AAEiB,eAAJC,IAAI,CAACZ,KAAD,EAAiB;AAC/BlB,UAAAA,OAAO,CAAC8B,IAAR,CAAaZ,KAAb;AACH;;AAEoB,eAAPa,OAAO,CAACb,KAAD,EAAiB;AAClClB,UAAAA,OAAO,CAAC+B,OAAR,CAAgBb,KAAhB;AACH;;AAEoB,eAAPc,OAAO,CAACd,KAAD,EAAiB,GAAGT,cAApB,EAA2C;AAC5DT,UAAAA,OAAO,CAACgC,OAAR,CAAgBd,KAAhB,EAAuB,GAAGT,cAA1B;AACH;;AAEsB,eAATwB,SAAS,CAACf,KAAD,EAAiB;AACpClB,UAAAA,OAAO,CAACiC,SAAR,CAAkBf,KAAlB;AACH;;AAEkB,eAALgB,KAAK,GAAG;AAClBlC,UAAAA,OAAO,CAACkC,KAAR;AACH;;AAtHqB,O","sourcesContent":["\nimport cfg_global from \"../../config/cfg_global\";\nimport UTime from \"./UTime\";\n\n/**\n * 日志输出\n */\nexport default class ULog {\n\n    /**初始化 */\n    public static init() {\n        ULog.log('enableLog:', cfg_global.enableLog)\n        if (!cfg_global.enableLog) {\n            console.log = () => { };\n            console.debug = () => { };\n            console.warn = () => { };\n            console.error = () => { };\n            console.info = () => { };\n        }\n    }\n\n    /**格式后的当前时间 */\n    private static getCurTimeFormat() {\n        return \"[\" + UTime.dateFormat(new Date(), \"hh:mm:ss.S\") + \"]\";\n    }\n\n    /**默认输出（绿色） */\n    public static log(param?: any, ...optionalParams: any[]) {\n        console.log(\"%c\" + this.getCurTimeFormat(), \"color:#08C91F\", param, ...optionalParams);\n    }\n\n    /**输出（红色） */\n    public static logRed(param?: any, ...optionalParams: any[]) {\n        console.log(\"%c\" + this.getCurTimeFormat(), \"color:#FF0000\", param, ...optionalParams);\n    }\n\n    /**输出（蓝色） */\n    public static logBlue(param?: any, ...optionalParams: any[]) {\n        console.log(\"%c\" + this.getCurTimeFormat(), \"color:#055AF1\", param, ...optionalParams);\n    }\n\n    /**输出（橙色） */\n    public static logOrange(param?: any, ...optionalParams: any[]) {\n        console.log(\"%c\" + this.getCurTimeFormat(), \"color:#FF8500\", param, ...optionalParams);\n    }\n\n    /**输出（灰色） */\n    public static logGray(param?: any, ...optionalParams: any[]) {\n        console.log(\"%c\" + this.getCurTimeFormat(), \"color:#666666\", param, ...optionalParams);\n    }\n\n    public static debug(param?: any, ...optionalParams: any[]) {\n        console.debug(param, ...optionalParams);\n    }\n\n    public static warn(param?: any, ...optionalParams: any[]) {\n        console.warn(param, ...optionalParams);\n    }\n\n    public static error(param?: any, ...optionalParams: any[]) {\n        console.error(param, ...optionalParams);\n    }\n\n    public static info(param?: any, ...optionalParams: any[]) {\n        console.info(param, ...optionalParams);\n    }\n\n    public static trace(param?: any, ...optionalParams: any[]) {\n        console.trace(param, ...optionalParams);\n    }\n\n    public static assert(condition?: boolean, param?: any, ...optionalParams: any[]) {\n        console.assert(condition, param, ...optionalParams);\n    }\n\n    public static count(label?: string) {\n        console.count(label);\n    }\n\n    public static countReset(label?: string) {\n        console.countReset(label);\n    }\n\n    public static dir(item?: any, options?: any) {\n        console.dir(item, options);\n    }\n\n    public static dirxml(param?: any, ...optionalParams: any[]) {\n        console.dirxml(param, ...optionalParams);\n    }\n\n    public static group(param?: any, ...optionalParams: any[]) {\n        console.group(param, ...optionalParams);\n    }\n\n    public static groupCollapsed(param?: any, ...optionalParams: any[]) {\n        console.groupCollapsed(param, ...optionalParams);\n    }\n\n    public static groupEnd() {\n        console.groupEnd();\n    }\n\n    public static table(tabularData?: any, properties?: string[]) {\n        console.table(tabularData, properties);\n    }\n\n    public static time(label?: string) {\n        console.time(label);\n    }\n\n    public static timeEnd(label?: string) {\n        console.timeEnd(label);\n    }\n\n    public static timeLog(label?: string, ...optionalParams: any[]) {\n        console.timeLog(label, ...optionalParams);\n    }\n\n    public static timeStamp(label?: string) {\n        console.timeStamp(label);\n    }\n\n    public static clear() {\n        console.clear();\n    }\n}\n"]}