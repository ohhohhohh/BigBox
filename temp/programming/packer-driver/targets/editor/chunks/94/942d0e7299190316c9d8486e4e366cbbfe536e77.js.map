{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/util/UBundle.ts"],"names":["UBundle","Asset","assetManager","ULog","loadBundle","bundleName","callback","bundle","getBundle","log","error","releaseBundle","releaseAll","removeBundle","warn","loadBundleRes","path","onProgress","onComplete","loadedFunc","load","finish","total","item","asset","loadBundleDir","loadDir","assets"],"mappings":"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","sourcesContent":["import { Asset, AssetManager, assetManager } from \"cc\";\nimport ULog from \"./ULog\";\n\n/**\n * bundle工具类\n */\nexport default class UBundle {\n\n    /**\n     * 加载bundle\n     * @param bundleName bundle名称\n     * @param callback 回调\n     */\n    static loadBundle(bundleName: string, callback?: Function) {\n        let bundle = assetManager.getBundle(bundleName);\n        if (bundle) {\n            ULog.log('loadBundle 已存在 bundleName:', bundleName);\n            callback && callback(bundle);\n        } else {\n            assetManager.loadBundle(bundleName, (error: Error, bundle: AssetManager.Bundle) => {\n                if (!error) {\n                    ULog.log('loadBundle 成功 bundleName:', bundleName);\n                    callback && callback(bundle);\n                } else {\n                    ULog.error('loadBundle 失败 bundleName:', bundleName, ' error:', error);\n                    callback && callback(null);\n                }\n            })\n        }\n    }\n\n    /**\n    * 释放Bundle\n    * @param bundleName bundle名称\n    */\n    static releaseBundle(bundleName: string) {\n        let bundle = assetManager.getBundle(bundleName);\n        if (bundle) {\n            bundle.releaseAll();\n            assetManager.removeBundle(bundle);\n            ULog.log('releaseBundle 成功 bundleName:', bundleName)\n        } else {\n            ULog.warn('releaseBundle 失败 bundleName:', bundleName)\n        }\n    }\n\n    /**\n     * 加载bundle资源\n     * @param bundleName bundle名称\n     * @param path 路径\n     * @param callback 回调\n     */\n    static loadBundleRes(bundleName: string, path: string, onProgress?: Function, onComplete?: Function) {\n        let bundle = assetManager.getBundle(bundleName);\n        let loadedFunc = (bundle: AssetManager.Bundle) => {\n            bundle.load(path, Asset, (finish: number, total: number, item: AssetManager.RequestItem) => {\n                // ULog.log('loadBundleRes progeress:', finish, ' / ', total);\n                onProgress && onProgress(finish, total, item);\n            }, (error: Error, asset: Asset) => {\n                if (error) {\n                    ULog.error('loadBundleRes 失败 path:', path, ' error:', error);\n                } else {\n                    ULog.log('loadBundleRes 成功 path:', path)\n                }\n                onComplete && onComplete(error, asset);\n            })\n        }\n        if (bundle) {\n            loadedFunc(bundle);\n        } else {\n            this.loadBundle(bundleName, (bundle: AssetManager.Bundle | null) => {\n                if (bundle) {\n                    loadedFunc(bundle);\n                } else {\n                    ULog.error('加载bundle资源 失败 bundleName:', bundleName)\n                }\n            })\n        }\n    }\n\n    /**\n     * 加载Bundle目录\n     * @param bundleName bundle名称\n     * @param callback 回调\n     */\n    static loadBundleDir(bundleName: string, path: string, callback?: Function) {\n        this.loadBundle(bundleName, (bundle: AssetManager.Bundle | null) => {\n            if (bundle) {\n                bundle.loadDir(path, Asset, (finish: number, total: number, item: AssetManager.RequestItem) => {\n                    ULog.log('loadBundleDir progeress:', finish, ' / ', total)\n                }, (error: Error, assets: Asset[]) => {\n                    callback && callback(error, assets);\n                });\n            } else {\n                ULog.error('loadBundleDir 失败 bundleName:', bundleName)\n            }\n        })\n    }\n\n}\n\n"]}