{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/util/UTime.ts"],"names":["UTime","dateFormat","date","fmt","isToBeijingDate","Date","getTime","getTimezoneOffset","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","countDown","totalTime","finishFunc","onceFunc","countNum","timerId","setInterval","clearInterval"],"mappings":";;;iBAIqBA,K;;;;;;;;;;;;;AAHrB;AACA;AACA;yBACqBA,K,GAAN,MAAMA,KAAN,CAAY;AAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACqB,eAAVC,UAAU,CAACC,IAAD,EAAaC,GAAb,EAA0BC,eAAwB,GAAG,KAArD,EAAoE;AACjF,cAAIA,eAAJ,EAAqB;AACjBF,YAAAA,IAAI,GAAG,IAAIG,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,CAAC,IAAID,IAAJ,GAAWE,iBAAX,KAAiC,EAAjC,GAAsC,CAAvC,IAA4C,IAA5C,GAAmD,IAAnF,CAAP;AACH;;AAED,cAAIC,CAAC,GAAG;AACJ,kBAAMN,IAAI,CAACO,QAAL,KAAkB,CADpB;AAC2B;AAC/B,kBAAMP,IAAI,CAACQ,OAAL,EAFF;AAEsB;AAC1B,kBAAMR,IAAI,CAACS,QAAL,EAHF;AAGuB;AAC3B,kBAAMT,IAAI,CAACU,UAAL,EAJF;AAIyB;AAC7B,kBAAMV,IAAI,CAACW,UAAL,EALF;AAKyB;AAC7B,kBAAMC,IAAI,CAACC,KAAL,CAAW,CAACb,IAAI,CAACO,QAAL,KAAkB,CAAnB,IAAwB,CAAnC,CANF;AAMyC;AAC7C,iBAAKP,IAAI,CAACc,eAAL,EAPD,CAO2B;;AAP3B,WAAR;AASA,cAAI,OAAOC,IAAP,CAAYd,GAAZ,CAAJ,EACIA,GAAG,GAAGA,GAAG,CAACe,OAAJ,CAAYC,MAAM,CAACC,EAAnB,EAAuB,CAAClB,IAAI,CAACmB,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAAvB,CAAN;;AACJ,eAAK,IAAIC,CAAT,IAAchB,CAAd,EACI,IAAI,IAAIW,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+Bd,GAA/B,CAAJ,EACIA,GAAG,GAAGA,GAAG,CAACe,OAAJ,CAAYC,MAAM,CAACC,EAAnB,EAAwBD,MAAM,CAACC,EAAP,CAAUG,MAAV,IAAoB,CAArB,GAA2Bf,CAAC,CAACgB,CAAD,CAA5B,GAAoC,CAAC,OAAOhB,CAAC,CAACgB,CAAD,CAAT,EAAcF,MAAd,CAAqB,CAAC,KAAKd,CAAC,CAACgB,CAAD,CAAP,EAAYD,MAAjC,CAA3D,CAAN;;AACR,iBAAOpB,GAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACoB,eAATsB,SAAS,CAACC,SAAD,EAAoBC,UAApB,EAA2CC,QAA3C,EAAwE;AACpF,cAAIC,QAAQ,GAAGH,SAAf;AACAE,UAAAA,QAAQ,IAAIA,QAAQ,CAACC,QAAD,CAApB;AACA,cAAIC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC5BF,YAAAA,QAAQ;;AACR,gBAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACfD,cAAAA,QAAQ,IAAIA,QAAQ,CAACC,QAAD,CAApB;AACAF,cAAAA,UAAU,IAAIA,UAAU,EAAxB;AACAK,cAAAA,aAAa,CAACF,OAAD,CAAb;AACH,aAJD,MAIO;AACHF,cAAAA,QAAQ,IAAIA,QAAQ,CAACC,QAAD,CAApB;AACH;AACJ,WATwB,EAStB,IATsB,CAAzB;AAUA,iBAAOC,OAAP;AACH;;AApDsB,O","sourcesContent":["\n/**\n * 日期时间\n */\nexport default class UTime {\n\n    /**\n     * 日期格式化处理\n     * @param fmt 格式\n     * @param date 日期\n     * @param isToBeijingDate 是否转换到北京日期\n     * @returns 返回格式化后的日期\n     */\n    static dateFormat(date: Date, fmt: string, isToBeijingDate: boolean = false): string {\n        if (isToBeijingDate) {\n            date = new Date(new Date().getTime() + (new Date().getTimezoneOffset() / 60 + 8) * 3600 * 1000);\n        }\n\n        let o = {\n            \"M+\": date.getMonth() + 1,     //月份 \n            \"d+\": date.getDate(),     //日 \n            \"h+\": date.getHours(),     //小时 \n            \"m+\": date.getMinutes(),     //分 \n            \"s+\": date.getSeconds(),     //秒 \n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度 \n            \"S\": date.getMilliseconds()    //毫秒 \n        };\n        if (/(y+)/.test(fmt))\n            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (var k in o)\n            if (new RegExp(\"(\" + k + \")\").test(fmt))\n                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n        return fmt;\n    }\n\n    /**\n     * 设置倒计时\n     * @param totalTime 总时间\n     * @param finishFunc 结束回调\n     * @param onceFunc 每一秒回调\n     * @returns \n     */\n    static countDown(totalTime: number, finishFunc?: Function, onceFunc?: Function): number {\n        let countNum = totalTime;\n        onceFunc && onceFunc(countNum);\n        let timerId = setInterval(() => {\n            countNum--;\n            if (countNum <= 0) {\n                onceFunc && onceFunc(countNum);\n                finishFunc && finishFunc();\n                clearInterval(timerId);\n            } else {\n                onceFunc && onceFunc(countNum);\n            }\n        }, 1000);\n        return timerId;\n    }\n}\n"]}