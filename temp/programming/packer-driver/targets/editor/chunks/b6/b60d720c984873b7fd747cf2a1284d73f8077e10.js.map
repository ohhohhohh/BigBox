{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/util/URegex.ts"],"names":["URegex","isPhoneNumber","phoneNum","regex","test","isEmail","email","isNumer","num","isIdNumber","id","isChinese","str","isPassword","password"],"mappings":";;;iBAIqBA,M;;;;;;;;;;;;;AAHrB;AACA;AACA;yBACqBA,M,GAAN,MAAMA,MAAN,CAAa;AAExB;AACJ;AACA;AACA;AACA;AACwB,eAAbC,aAAa,CAACC,QAAD,EAA4B;AAC5C,cAAIC,KAAK,GAAG,mBAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWF,QAAX,CAAJ,EAA0B;AACtB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACkB,eAAPG,OAAO,CAACC,KAAD,EAAyB;AACnC,cAAIH,KAAK,GAAG,oDAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWE,KAAX,CAAJ,EAAuB;AACnB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACkB,eAAPC,OAAO,CAACC,GAAD,EAAuB;AACjC,cAAIL,KAAK,GAAG,UAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWI,GAAX,CAAJ,EAAqB;AACjB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACqB,eAAVC,UAAU,CAACC,EAAD,EAAsB;AACnC,cAAIP,KAAK,GAAG,0CAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWM,EAAX,CAAJ,EAAoB;AAChB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACoB,eAATC,SAAS,CAACC,GAAD,EAAuB;AACnC,cAAIT,KAAK,GAAG,oBAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWQ,GAAX,CAAJ,EAAqB;AACjB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACqB,eAAVC,UAAU,CAACC,QAAD,EAA4B;AACzC,cAAIX,KAAK,GAAG,gBAAZ;;AACA,cAAIA,KAAK,CAACC,IAAN,CAAWU,QAAX,CAAJ,EAA0B;AACtB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;;AA9EuB,O","sourcesContent":["\n/**\n * 正则检测\n */\nexport default class URegex {\n\n    /**\n     * 检测 手机号\n     * @param phoneNum 手机号码\n     * @returns 是否是手机号\n     */\n    static isPhoneNumber(phoneNum: string): boolean {\n        let regex = /^1[3456789]\\d{9}$/;\n        if (regex.test(phoneNum)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 检测 邮箱\n     * @param email 邮箱\n     * @returns 是否是邮箱\n     */\n    static isEmail(email: string): boolean {\n        let regex = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n        if (regex.test(email)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 检测 纯数字\n     * @param num 数字\n     * @returns 是否是纯数字\n     */\n    static isNumer(num: string): boolean {\n        let regex = /^[0-9]+$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 检测 身份证(15位一代身份证和18位二代身份证都包含在内)\n     * @param id 身份证\n     * @returns 是否是身份证\n     */\n    static isIdNumber(id: string): boolean {\n        let regex = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n        if (regex.test(id)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 检测 汉字\n     * @param str 字符串\n     * @returns 是否是汉字\n     */\n    static isChinese(str: string): boolean {\n        let regex = /^[\\u2E80-\\u9FFF]+$/;\n        if (regex.test(str)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 检测 密码（字母和数字）\n     * @param password 密码\n     * @returns 是否是密码\n     */\n    static isPassword(password: string): boolean {\n        let regex = /^[A-Za-z0-9]+$/;\n        if (regex.test(password)) {\n            return true;\n        }\n        return false;\n    }\n}\n\n"]}