{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/manager/UIManager.ts"],"names":["UIManager","Asset","instantiate","resources","cfg_scene","cfg_ui","EDialogMsgType","EUICacheMode","EUIId","AppHub","VTooltip","SceneBase","UIBase","UBundle","ULog","_sceneRoot","_uiRoot","_uiRunningPool","_uiCachePool","_prefabCachePool","_tooltip","_msgDialog","ins","_ins","init","rootNode","getChildByName","getComponent","loadScene","sceneType","data","onProgress","onComplete","enableCircle","cfgScene","error","showCircle","loadBundleRes","bundleName","resPath","finish","total","item","asset","bundleScene","baseScene","destroyAllChildren","runningBundleName","initSceneData","parent","hideCircle","openUI","uiId","cfgUi","uiRunning","warn","uiCache","log","show","loadSuccess","node","uiClass","addRef","setParent","setZIndex","zIndex","load","closeUI","cacheMode","REUSABLE","hide","DESTROY","destroyMe","RELEASE","decRef","showTip","text","showTime","showDialogMsg","msg","dialogType","okCallback","cancelCallback","closeCallback","OK","DIALOG_MSG"],"mappings":"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","sourcesContent":["import { Asset, AssetManager, instantiate, Node, Prefab, resources } from \"cc\";\nimport cfg_scene from \"../../config/cfg_scene\";\nimport cfg_ui from \"../../config/cfg_ui\";\nimport { ESceneType } from \"../../enum/EScene\";\nimport { EDialogMsgType, EUICacheMode, EUIId } from \"../../enum/EUI\";\nimport AppHub from \"../../main/AppHub\";\nimport VMsgDialog from \"../../ui/common/VMsgDialog\";\nimport VTooltip from \"../../ui/common/VTooltip\";\nimport { SceneBase } from \"../base/SceneBase\";\nimport UIBase from \"../base/UIBase\";\nimport UBundle from \"../util/UBundle\";\nimport ULog from \"../util/ULog\";\n\n\n/**\n * UI管理类\n */\nexport default class UIManager {\n    private static _ins: UIManager = null;\n    public static get ins(): UIManager {\n        if (!this._ins) {\n            this._ins = new UIManager();\n        }\n        return this._ins;\n    }\n\n    /**场景根节点 */\n    private _sceneRoot: Node = null;\n    /**ui根节点 */\n    private _uiRoot: Node = null;\n\n    /**ui运行池 */\n    private _uiRunningPool: { [key: string]: UIBase } = {};\n    /**ui缓存池 */\n    private _uiCachePool: { [key: string]: UIBase } = {};\n    /**ui预制体缓存池 */\n    private _prefabCachePool: { [key: string]: Prefab } = {};\n\n    /**公共文本提示 */\n    private _tooltip: VTooltip = null;\n    /**公共消息弹窗 */\n    private _msgDialog: VMsgDialog = null;\n\n    init(rootNode: Node) {\n        this._uiRunningPool = {};\n        this._uiCachePool = {};\n        this._prefabCachePool = {};\n        this._sceneRoot = rootNode.getChildByName('sceneRoot');\n        this._uiRoot = rootNode.getChildByName('uiRoot');\n        this._tooltip = rootNode.getChildByName('tooltip').getComponent(VTooltip);\n        // this._msgDialog = rootNode.getChildByName('msgDialog').getComponent(VMsgDialog);\n    }\n\n    /**\n     * 加载场景\n     * @param sceneType 场景类型\n     * @param data 数据\n     * @param enableCircle 是否显示转圈加载加载\n     */\n    loadScene(sceneType: ESceneType, data?: any, onProgress?: Function, onComplete?: Function, enableCircle: boolean = true) {\n        let cfgScene = cfg_scene[sceneType];\n        if (!cfgScene) {\n            ULog.error('loadScene cfg_ui没有对应配置! sceneType:', sceneType);\n            return;\n        }\n\n        //释放当前bundle\n        // if (AppHub.ins.runningBundleName) {\n        //     UBundle.releaseBundle(AppHub.ins.runningBundleName);\n        // }\n\n        enableCircle && this.showCircle();\n        UBundle.loadBundleRes(cfgScene.bundleName, cfgScene.resPath,\n            (finish: number, total: number, item: AssetManager.RequestItem) => {\n                // ULog.log(cfgScene.resPath, ':', finish, '/', total);\n                onProgress && onProgress(finish, total, item);\n            }, (error: Error, asset: Prefab) => {\n                if (error) {\n                    ULog.error('loadBundleScene 加载失败:', cfgScene, ' error:', error);\n                } else {\n                    let bundleScene = instantiate(asset);\n                    let baseScene = bundleScene.getComponent(SceneBase);\n                    this._sceneRoot.destroyAllChildren();\n                    AppHub.ins.runningBundleName = cfgScene.bundleName;\n                    baseScene.initSceneData(data);\n                    bundleScene.parent = this._sceneRoot;\n                    onComplete && onComplete();\n                }\n                enableCircle && this.hideCircle();\n            });\n    }\n\n    /**\n     * 打开UI\n     * @param uiId ui id\n     * @param data 打开ui传输的数据\n     * @param enableCircle 是否显示转圈加载\n     * @param onProgress 进度回调\n     * @param onComplete 完成回调\n     */\n    openUI(uiId: EUIId, data?: any, enableCircle: boolean = true, onProgress?: Function, onComplete?: Function) {\n        let cfgUi = cfg_ui[uiId];\n        if (!cfgUi) {\n            ULog.error('cfg_ui没有对应配置! uiId:', uiId);\n            return;\n        }\n\n        let uiRunning = this._uiRunningPool[uiId];\n        if (uiRunning) { //正在运行\n            ULog.warn('ui正在运行,请先关闭再打开! uiId:', uiId);\n            return;\n        } else {\n            let uiCache = this._uiCachePool[uiId];\n            if (uiCache) { //有ui缓存\n                ULog.log('openUI 有ui缓存 ', uiId)\n                uiCache.show(data);\n                // uiCache.setParent(this._uiRoot);\n                // uiCache.setZIndex(cfgUi.zIndex);\n                this._uiRunningPool[uiId] = uiCache;\n                delete this._uiCachePool[uiId];\n            } else { //新加载\n                ULog.log('openUI 新加载 ', uiId)\n                let loadSuccess = (asset: Prefab) => {\n                    let node = instantiate(asset);\n                    let uiClass = node.getComponent(UIBase);\n                    asset.addRef();\n                    this._prefabCachePool[uiId] = asset;\n                    if (uiClass) {\n                        uiClass.init(uiId);\n                        uiClass.show(data);\n                        uiClass.setParent(this._uiRoot);\n                        uiClass.setZIndex(cfgUi.zIndex);\n                        this._uiRunningPool[uiId] = uiClass;\n                    } else {\n                        ULog.error('没有对应脚本 UIBase uiId:', uiId);\n                    }\n                    onComplete && onComplete();\n                }\n\n                enableCircle && this.showCircle();\n                if (cfgUi.bundleName == 'resources') {\n                    resources.load(cfgUi.resPath, Asset,\n                        (finish: number, total: number, item: AssetManager.RequestItem) => {\n                            // ULog.log(cfgUi.resPath, ':', finish, '/', total);\n                            onProgress && onProgress(finish, total, item);\n                        },\n                        (error: Error, asset: Prefab) => {\n                            if (error) {\n                                ULog.error('加载ui失败 resources:', uiId, ' error:', error);\n                            } else {\n                                loadSuccess(asset);\n                            }\n                            enableCircle && this.hideCircle();\n                        }\n                    )\n                } else {\n                    UBundle.loadBundleRes(cfgUi.bundleName, cfgUi.resPath,\n                        (finish: number, total: number, item: AssetManager.RequestItem) => {\n                            // ULog.log(cfgUi.resPath, ':', finish, '/', total);\n                            onProgress && onProgress(finish, total, item);\n                        }, (error: Error, asset: Prefab) => {\n                            if (error) {\n                                ULog.error('加载ui失败 bundle:', uiId, ' error:', error);\n                            } else {\n                                loadSuccess(asset);\n                            }\n                            enableCircle && this.hideCircle();\n                        });\n                }\n            }\n        }\n\n        ULog.log('111 openUI _uiRunningPool ', this._uiRunningPool)\n        ULog.log('111 openUI _uiCachePool ', this._uiCachePool)\n        ULog.log('111 openUI _prefabCachePool ', this._prefabCachePool)\n    }\n\n    /**\n     * 关闭UI\n     * @param uiId ui id\n     * @param cacheMode 缓存模式\n     */\n    closeUI(uiId: EUIId, cacheMode: EUICacheMode = EUICacheMode.REUSABLE) {\n        let uiRunning = this._uiRunningPool[uiId];\n        if (uiRunning) {\n            uiRunning.hide();\n            delete this._uiRunningPool[uiId];\n            switch (cacheMode) {\n                case EUICacheMode.REUSABLE:\n                    //加入缓存池\n                    this._uiCachePool[uiId] = uiRunning;\n                    break;\n                case EUICacheMode.DESTROY:\n                    //删除节点，删除缓存池对象\n                    uiRunning.destroyMe();\n                    delete this._uiCachePool[uiId];\n                    break;\n                case EUICacheMode.RELEASE:\n                    //删除节点，删除缓存池对象，释放并删除预制体缓存\n                    uiRunning.destroyMe();\n                    this._prefabCachePool[uiId].decRef();\n                    delete this._uiCachePool[uiId];\n                    delete this._prefabCachePool[uiId];\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            ULog.warn('closeUI 不存在运行ui uiId:', uiId);\n        }\n\n        ULog.log('222 openUI _uiRunningPool ', this._uiRunningPool)\n        ULog.log('222 openUI _uiCachePool ', this._uiCachePool)\n        ULog.log('222 openUI _prefabCachePool ', this._prefabCachePool)\n    }\n\n    /**\n     * 展示提示文本\n     * @param text 文本内容\n     */\n    showTip(text: string) {\n        this._tooltip.show(text);\n    }\n\n    /**\n     * 展示等待转圈圈\n     * @param showTime 展示时间\n     */\n    showCircle(showTime?: number) {\n        // this._waiting.show(showTime);\n    }\n\n    /**隐藏转圈加载 */\n    hideCircle() {\n        // this._waiting.hide();\n    }\n\n    /**\n     * 展示消息弹窗\n     * @param msg 消息内容\n     * @param dialogType 弹窗类型\n     */\n    showDialogMsg(msg: string, dialogType: EDialogMsgType = EDialogMsgType.OK, okCallback?: Function, cancelCallback?: Function, closeCallback?: Function) {\n        let data = {\n            msg: msg,\n            dialogType: dialogType,\n            okCallback: okCallback,\n            cancelCallback: cancelCallback,\n            closeCallback: closeCallback\n        }\n        this.openUI(EUIId.DIALOG_MSG, data);\n    }\n}\n\n"]}