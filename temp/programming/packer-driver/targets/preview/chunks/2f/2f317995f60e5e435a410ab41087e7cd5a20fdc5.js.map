{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/core/util/UMath.ts"],"names":["UMath","random","Math","randomRange","min","max","num","floor","convertDecimalToOther","otherType","toString","convertOtherToDecimal","char","parseInt"],"mappings":";;;iBAIqBA,K;;;;;;;;;;;;;AAHrB;AACA;AACA;yBACqBA,K,GAAN,MAAMA,KAAN,CAAY;AACvB;AACJ;AACA;AACA;AACiB,eAANC,MAAM,GAAW;AACpB,iBAAOC,IAAI,CAACD,MAAL,EAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACsB,eAAXE,WAAW,CAACC,GAAD,EAAcC,GAAd,EAAmC;AACjD,cAAIC,GAAG,GAAGF,GAAG,GAAGF,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACD,MAAL,MAAiBI,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,CAAhB;AACA,iBAAOE,GAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACgC,eAArBE,qBAAqB,CAACF,GAAD,EAAcG,SAAd,EAAyC;AACjE,iBAAOH,GAAG,CAACI,QAAJ,CAAaD,SAAb,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACgC,eAArBE,qBAAqB,CAACC,IAAD,EAAYH,SAAZ,EAAuC;AAC/D,iBAAOI,QAAQ,CAACD,IAAD,EAAOH,SAAP,CAAf;AACH;AAED;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;;;AAlDuB,O","sourcesContent":["\n/**\n * 数学\n */\nexport default class UMath {\n    /**\n     * 0~1随机数\n     * @returns 返回数值\n     */\n    static random(): number {\n        return Math.random();\n    }\n\n    /**\n    * 在min到max的数值范围内取随机整数\n     * @param min 最小值\n     * @param max 最大值\n     * @returns 返回数值\n     */\n    static randomRange(min: number, max: number): number {\n        let num = min + Math.floor(Math.random() * (max - min + 1));\n        return num;\n    }\n\n    /**\n     * 十进制转其他进制\n     * @param num 十进制数字\n     * @param otherType 几进制\n     * @returns 返回进制字符串\n     */\n    static convertDecimalToOther(num: number, otherType: number): string {\n        return num.toString(otherType);\n    }\n\n    /**\n     * 其他进制转十进制\n     * @param char 其他进制字符\n     * @param otherType 几进制\n     * @returns 返回十进制数字\n     */\n    static convertOtherToDecimal(char: any, otherType: number): number {\n        return parseInt(char, otherType);\n    }\n\n    /**\n     * 二维向量旋转 顺时针旋转\n     * @param from 起始向量\n     * @param angele 旋转角度(角度)\n     */\n    // static vec2Rot(from: cc.Vec2, angele: number): cc.Vec2 {\n    //     let ro = (angele / 180) * Math.PI;\n    //     var x = from.x * Math.cos(ro) - from.y * Math.sin(ro);\n    //     var y = from.x * Math.sin(ro) + from.y * Math.cos(ro);\n    //     return cc.v2(x, y);\n    // }\n}\n\n\n"]}