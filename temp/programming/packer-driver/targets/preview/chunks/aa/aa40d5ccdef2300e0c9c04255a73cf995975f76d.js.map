{"version":3,"sources":["file:///Users/mario/Desktop/BigBox/assets/scripts/ui/common/VCircle.ts"],"names":["Component","_decorator","ULog","UTime","DEFAULT_MAX_WAITING_TIME","ccclass","property","VCircle","_timerId","init","hide","show","showTime","clearInterval","time","node","active","countDown","leftTime","debug","onDisable"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AACbC,MAAAA,I;;AACAC,MAAAA,K;;;;;;;AAEP;AACMC,MAAAA,wB,GAA2B,E;OAE3B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAGTM,O,WADpBF,OAAO,CAAC,SAAD,C,gBAAR,MACqBE,OADrB,SACqCP,SADrC,CAC+C;AAAA;AAAA;AAAA,eAGnCQ,QAHmC,GAGhB,CAHgB;AAAA;;AAK3CC,QAAAA,IAAI,GAAG;AACH,eAAKC,IAAL;AACA,eAAKF,QAAL,GAAgB,CAAhB;AACH;;AAEDG,QAAAA,IAAI,CAACC,QAAD,EAAoB;AACpB,eAAKJ,QAAL,IAAiBK,aAAa,CAAC,KAAKL,QAAN,CAA9B;AACA,cAAIM,IAAI,GAAGF,QAAQ,GAAGA,QAAH,GAAcR,wBAAjC;AACA,eAAKW,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,eAAKR,QAAL,GAAgB;AAAA;AAAA,8BAAMS,SAAN,CAAgBH,IAAhB,EAAsB,MAAM;AACxC,iBAAKJ,IAAL;AACH,WAFe,EAEZQ,QAAD,IAAsB;AACrB;AAAA;AAAA,8BAAKC,KAAL,CAAW,0BAAX,EAAuCD,QAAvC;AACH,WAJe,CAAhB;AAKH;;AAEDR,QAAAA,IAAI,GAAG;AACH,eAAKK,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAESI,QAAAA,SAAS,GAAS;AACxB,eAAKZ,QAAL,IAAiBK,aAAa,CAAC,KAAKL,QAAN,CAA9B;AACH;;AA3B0C,O","sourcesContent":["import { Component, _decorator } from \"cc\";\nimport ULog from \"../../core/util/ULog\";\nimport UTime from \"../../core/util/UTime\";\n\n/*默认加载转圈自动隐藏时间 */\nconst DEFAULT_MAX_WAITING_TIME = 10;\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('VCircle')\nexport default class VCircle extends Component {\n\n    /**定时器 */\n    private _timerId: number = 0;\n\n    init() {\n        this.hide();\n        this._timerId = 0;\n    }\n\n    show(showTime?: number) {\n        this._timerId && clearInterval(this._timerId);\n        let time = showTime ? showTime : DEFAULT_MAX_WAITING_TIME;\n        this.node.active = true;\n        this._timerId = UTime.countDown(time, () => {\n            this.hide();\n        }, (leftTime: number) => {\n            ULog.debug('VCircleLoading leftTime:', leftTime);\n        });\n    }\n\n    hide() {\n        this.node.active = false;\n    }\n\n    protected onDisable(): void {\n        this._timerId && clearInterval(this._timerId);\n    }\n\n}\n"]}